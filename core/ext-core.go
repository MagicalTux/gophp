package core

import (
	"math"
	"runtime"

	"github.com/MagicalTux/goro/core/phpv"
)

// WARNING: This file is auto-generated. DO NOT EDIT

func init() {
	RegisterExt(&Ext{
		Name:    "Core",
		Version: VERSION,
		Classes: []*ZClass{
			ArrayAccess,
			Closure,
			Exception,
			Iterator,
			IteratorAggregate,
			Serializable,
			Throwable,
			Traversable,
			stdClass,
		},
		Functions: map[string]*ExtFunction{
			"count":             &ExtFunction{Func: fncCount, Args: []*ExtFunctionArg{}},
			"define":            &ExtFunction{Func: fncDefine, Args: []*ExtFunctionArg{}},
			"defined":           &ExtFunction{Func: fncDefined, Args: []*ExtFunctionArg{}},
			"echo":              &ExtFunction{Func: stdFuncEcho, Args: []*ExtFunctionArg{}},
			"error_reporting":   &ExtFunction{Func: fncErrorReporting, Args: []*ExtFunctionArg{}},
			"func_get_arg":      &ExtFunction{Func: fncFuncGetArg, Args: []*ExtFunctionArg{}},
			"func_get_args":     &ExtFunction{Func: fncFuncGetArgs, Args: []*ExtFunctionArg{}},
			"func_num_args":     &ExtFunction{Func: fncFuncNumArgs, Args: []*ExtFunctionArg{}},
			"gc_collect_cycles": &ExtFunction{Func: stdFuncGcCollectCycles, Args: []*ExtFunctionArg{}},
			"gc_disable":        &ExtFunction{Func: stdFuncGcDisable, Args: []*ExtFunctionArg{}},
			"gc_enable":         &ExtFunction{Func: stdFuncGcEnable, Args: []*ExtFunctionArg{}},
			"gc_enabled":        &ExtFunction{Func: stdFuncGcEnabled, Args: []*ExtFunctionArg{}},
			"gc_mem_caches":     &ExtFunction{Func: stdFuncGcMemCaches, Args: []*ExtFunctionArg{}},
			"include":           &ExtFunction{Func: fncInclude, Args: []*ExtFunctionArg{}},
			"include_once":      &ExtFunction{Func: fncIncludeOnce, Args: []*ExtFunctionArg{}},
			"phpversion":        &ExtFunction{Func: stdFuncPhpVersion, Args: []*ExtFunctionArg{}},
			"print":             &ExtFunction{Func: fncPrint, Args: []*ExtFunctionArg{}},
			"require":           &ExtFunction{Func: fncRequire, Args: []*ExtFunctionArg{}},
			"require_once":      &ExtFunction{Func: fncRequireOnce, Args: []*ExtFunctionArg{}},
			"strcmp":            &ExtFunction{Func: fncStrcmp, Args: []*ExtFunctionArg{}},
			"strlen":            &ExtFunction{Func: fncStrlen, Args: []*ExtFunctionArg{}},
			"zend_version":      &ExtFunction{Func: stdFuncZendVersion, Args: []*ExtFunctionArg{}},
		},
		Constants: map[phpv.ZString]phpv.Val{
			"DEFAULT_INCLUDE_PATH":         phpv.ZString(".:"),
			"DIRECTORY_SEPARATOR":          phpv.ZString("/"),
			"E_ALL":                        phpv.ZInt(phpv.E_ALL),
			"E_COMPILphpv.E_ERROR":         phpv.ZInt(phpv.E_COMPILE_ERROR),
			"E_COMPILphpv.E_WARNING":       phpv.ZInt(phpv.E_COMPILE_WARNING),
			"E_CORphpv.E_ERROR":            phpv.ZInt(phpv.E_CORE_ERROR),
			"E_CORphpv.E_WARNING":          phpv.ZInt(phpv.E_CORE_WARNING),
			"E_DEPRECATED":                 phpv.ZInt(phpv.E_DEPRECATED),
			"E_ERROR":                      phpv.ZInt(phpv.E_ERROR),
			"E_NOTICE":                     phpv.ZInt(phpv.E_NOTICE),
			"E_PARSE":                      phpv.ZInt(phpv.E_PARSE),
			"E_RECOVERABLphpv.E_ERROR":     phpv.ZInt(phpv.E_RECOVERABLE_ERROR),
			"E_STRICT":                     phpv.ZInt(phpv.E_STRICT),
			"E_USER_DEPRECATED":            phpv.ZInt(phpv.E_USER_DEPRECATED),
			"E_USER_ERROR":                 phpv.ZInt(phpv.E_USER_ERROR),
			"E_USER_NOTICE":                phpv.ZInt(phpv.E_USER_NOTICE),
			"E_USER_WARNING":               phpv.ZInt(phpv.E_USER_WARNING),
			"E_WARNING":                    phpv.ZInt(phpv.E_WARNING),
			"FALSE":                        phpv.ZBool(false),
			"NULL":                         phpv.ZNull{},
			"PHP_EOL":                      phpv.ZString("\n"),
			"PHP_EXTRA_VERSION":            phpv.ZString(""),
			"PHP_FD_SETSIZE":               phpv.ZInt(1024),
			"PHP_FLOAT_DIG":                phpv.ZInt(15),
			"PHP_FLOAT_EPSILON":            phpv.ZFloat(2.220446049250313e-16),
			"PHP_FLOAT_MAX":                phpv.ZFloat(math.MaxFloat64),
			"PHP_FLOAT_MIN":                phpv.ZFloat(math.SmallestNonzeroFloat64),
			"PHP_INT_MAX":                  phpv.ZInt(math.MaxInt64),
			"PHP_INT_MIN":                  phpv.ZInt(math.MinInt64),
			"PHP_INT_SIZE":                 phpv.ZInt(8),
			"PHP_MAJOR_VERSION":            phpv.ZInt(7),
			"PHP_MAXPATHLEN":               phpv.ZInt(4096),
			"PHP_MINOR_VERSION":            phpv.ZInt(3),
			"PHP_OS":                       phpv.ZString(runtime.GOOS),
			"PHP_OS_FAMILY":                phpv.ZString(runtime.GOOS),
			"PHP_OUTPUT_HANDLER_CLEAN":     phpv.ZInt(BufferClean),
			"PHP_OUTPUT_HANDLER_CLEANABLE": phpv.ZInt(BufferCleanable),
			"PHP_OUTPUT_HANDLER_CONT":      phpv.ZInt(BufferWrite),
			"PHP_OUTPUT_HANDLER_END":       phpv.ZInt(BufferFinal),
			"PHP_OUTPUT_HANDLER_FINAL":     phpv.ZInt(BufferFinal),
			"PHP_OUTPUT_HANDLER_FLUSH":     phpv.ZInt(BufferFlush),
			"PHP_OUTPUT_HANDLER_FLUSHABLE": phpv.ZInt(BufferFlushable),
			"PHP_OUTPUT_HANDLER_REMOVABLE": phpv.ZInt(BufferRemovable),
			"PHP_OUTPUT_HANDLER_START":     phpv.ZInt(BufferStart),
			"PHP_OUTPUT_HANDLER_STDFLAGS":  phpv.ZInt(BufferCleanable | BufferFlushable | BufferRemovable),
			"PHP_OUTPUT_HANDLER_WRITE":     phpv.ZInt(BufferWrite),
			"PHP_RELEASE_VERSION":          phpv.ZInt(0),
			"PHP_VERSION":                  phpv.ZString(VERSION),
			"PHP_VERSION_ID":               phpv.ZInt(70300),
			"PHP_ZTS":                      phpv.ZInt(1),
			"TRUE":                         phpv.ZBool(true),
			"ZEND_THREAD_SAFE":             phpv.ZBool(true),
		},
	})
}
